{"version":3,"file":"static/js/625.8b79fcb0.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactsForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const AddContactForm = styled(Form)`\n  max-width: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 10px;\n`;\n\nexport const FormikInput = styled(Field)`\n  height: 20px;\n  border: 2px solid rgb(163 167 167);\n  border-radius: 4px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  width: auto;\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const AddButton = styled.button`\n  border-radius: 4px;\n  width: 100px;\n  height: 30px;\n  text-align: center;\n  border: none;\n  font-size: 14px;\n  font-weight: 600;\n  background-color: rgb(63, 81, 181);\n  color: white;\n  margin: 0 auto;\n`;\n","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport { AddContactForm, Label, AddButton, FormikInput } from './ContactsForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    const loweredCase = name.toLowerCase().trim();\n    const searchName = contacts.some(\n      cont => cont.name.toLowerCase().trim() === loweredCase\n    );\n\n    if (searchName) {\n      alert(`${name} is already in contacts`);\n    } else if (name.length === 0) {\n      alert('Fields must be filled!');\n    } else {\n      dispatch(\n        addContact({\n          name,\n          number,\n        })\n      );\n    }\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <AddContactForm>\n        <Label>\n          Name\n          <FormikInput\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Enter name\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <FormikInput\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\d{3}[-]\\d{2}[-]\\d{2}\"\n            title=\"The phone number must consist of numbers and a dash ###-##-##\"\n            placeholder=\"Enter phone number\"\n            required\n          />\n        </Label>\n        <AddButton type=\"submit\">Add Contact</AddButton>\n      </AddContactForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 0;\n`;\n\nexport const ContactsItem = styled.li`\n  width: 280px;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`;\n\nexport const DeleteButton = styled.button`\n  border-radius: 4px;\n  text-align: center;\n  border: none;\n  font-size: 12px;\n  background-color: rgb(63, 81, 181);\n  color: white;\n`;\n\nexport const Message = styled.ul`\n  padding: 0;\n  text-align: center;\n\n  font-size: 16px;\n  font-weight: 600;\n  color: orange;\n`;\n","import { deleteContact } from '../../redux/contacts/operations';\nimport { getContacts, getFilter } from '../../redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  ContactsList,\n  ContactsItem,\n  DeleteButton,\n  Message,\n} from './ContactList.styled';\n\nconst filterContacts = (items, filter) => {\n  return items.filter(contacts =>\n    contacts.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport const ContactList = () => {\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const visibleContacts = filterContacts(contacts, filter);\n  return (\n    <ContactsList>\n      {visibleContacts.map(contact => (\n        <ContactsItem key={contact.id}>\n          {`${contact.name} : ${contact.number}`}\n          {\n            <DeleteButton\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => {\n                dispatch(\n                  deleteContact(contact.id)\n                );\n              }}\n            >\n              delete\n            </DeleteButton>\n          }\n        </ContactsItem>\n      ))}\n      <Message>\n        {contacts.length === 0 && 'You do not have contacts 😯'}\n      </Message>\n    </ContactsList>\n  );\n};","import styled from 'styled-components';\n\nexport const TitleFilter = styled.h3`\n  font-size: 24px;\n  text-align: center;\n  margin: 0;\n  margin-top: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const ContainerFilter = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\nmargin-top: 10px;\n  height: 20px;\n  max-width: 180px;\n  border: 2px solid rgb(163 167 167);\n  border-radius: 4px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/selectors';\nimport { setFilter } from '../../redux/contacts/contactsSlice';\nimport { TitleFilter, ContainerFilter, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  return (\n    <ContainerFilter>\n      <TitleFilter>Find contacts by name</TitleFilter>\n      <Input\n        type=\"text\"\n        value={filter}\n        onChange={event => dispatch(setFilter(event.target.value))}\n        placeholder=\"Enter Name\"\n      />\n    </ContainerFilter>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { getIsLoading } from '../redux/contacts/selectors';\n\nconst styles = {\n  container: {\n  display: 'flex',\n  flexDirection: 'column',\n  margin: '0 auto',\n  gap: '20px', \n  maxWidth: '300px',\n  marginTop: '30px',\n  border: '1px solid rgb(236, 236, 236)',\n  borderRadius: '4px',\n  boxShadow: '0px 1px 3px rgb(0, 0, 0, 0.12)',\n  },\n  message: {\n  padding: '0',\n  textAlign: 'center',\n  fontSize: '16px',\n  fontWeight: '600',\n  color: 'orange',\n  }\n}\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div style={styles.container}>\n      <ContactForm />\n      <Filter />\n      <div style={styles.message}>{isLoading && 'Request in progress...👌'}</div>\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["getContacts","state","contacts","items","getFilter","filter","getIsLoading","isLoading","AddContactForm","styled","Form","FormikInput","Field","Label","AddButton","ContactForm","dispatch","useDispatch","useSelector","initialValues","name","number","onSubmit","resetForm","loweredCase","toLowerCase","trim","some","cont","alert","length","addContact","type","pattern","title","placeholder","required","ContactsList","ContactsItem","DeleteButton","Message","ContactList","visibleContacts","includes","filterContacts","map","contact","onClick","deleteContact","id","TitleFilter","ContainerFilter","Input","Filter","value","onChange","event","setFilter","target","styles","container","display","flexDirection","margin","gap","maxWidth","marginTop","border","borderRadius","boxShadow","message","padding","textAlign","fontSize","fontWeight","color","useEffect","fetchContacts","style"],"sourceRoot":""}